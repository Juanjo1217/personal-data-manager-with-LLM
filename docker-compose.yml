services:
  postgres:
    build:
      context: ./PostgreSQL
      dockerfile: Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volumen persistente
      - ./PostgreSQL:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    container_name: postgres-container
    healthcheck:
      test: ["CMD-SHELL", "pg_ready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: DockerFile
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    container_name: django-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres-container
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mydatabase
      - POSTGRES_PORT=5432
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    container_name: nextjs-frontend

  llm:
    build:
      context: ./llm
      dockerfile: DockerFile
    volumes:
      - ./llm:/app
    ports:
      - "5000:5000"
    depends_on:
      - backend
    container_name: llm-container
    environment:
      - llm_API_KEY=$LLM_API_KEY
    env_file:
      - .env

volumes:
  postgres_data: